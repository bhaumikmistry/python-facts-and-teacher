{
  "id": "slice-operator",
  "title": "Python's Powerful Slice Operator",
  "shortDescription": "Python's slice operator [:] can reverse lists, extract parts, and more with elegant syntax!",
  "detailedDescription": "Python's slice operator is incredibly versatile and unique among programming languages. With simple syntax like [start:end:step], you can extract sublists, reverse sequences, skip elements, and perform complex list manipulations. The slice operator works with strings, lists, tuples, and other sequence types.",
  "examples": [
    "# Basic slicing",
    "numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
    "",
    "# Get first 5 elements",
    "print(numbers[:5])  # [0, 1, 2, 3, 4]",
    "",
    "# Get last 3 elements",
    "print(numbers[-3:])  # [7, 8, 9]",
    "",
    "# Reverse the list",
    "print(numbers[::-1])  # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]",
    "",
    "# Every second element",
    "print(numbers[::2])  # [0, 2, 4, 6, 8]",
    "",
    "# Works with strings too!",
    "text = 'Python'",
    "print(text[::-1])  # 'nohtyP'"
  ],
  "links": [
    {
      "title": "Python Slicing",
      "url": "https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range"
    }
  ]
}