{
  "id": "python-philosophy",
  "title": "Python's Design Philosophy",
  "shortDescription": "Python prioritizes readability, simplicity, and the principle that there should be one obvious way to do things!",
  "detailedDescription": "Python's design philosophy emphasizes code readability and simplicity. The language favors explicit over implicit, simple over complex, and readable over clever. This philosophy has made Python accessible to beginners while remaining powerful for experts. The famous quote 'There should be one obvious way to do it' reflects this approach.",
  "examples": [
    "# Python philosophy in action:",
    "",
    "# Explicit is better than implicit",
    "# Good: clear and explicit",
    "from datetime import datetime",
    "now = datetime.now()",
    "",
    "# Readability counts",
    "# Good: readable list comprehension",
    "even_squares = [x**2 for x in range(10) if x % 2 == 0]",
    "",
    "# Simple is better than complex",
    "# Good: simple and clear",
    "def calculate_average(numbers):",
    "    return sum(numbers) / len(numbers) if numbers else 0",
    "",
    "# Flat is better than nested",
    "# Good: avoid deep nesting",
    "def process_data(data):",
    "    if not data:",
    "        return None",
    "    ",
    "    if not isinstance(data, list):",
    "        return None",
    "    ",
    "    return [item.upper() for item in data if isinstance(item, str)]"
  ],
  "links": [
    {
      "title": "The Zen of Python",
      "url": "https://peps.python.org/pep-0020/"
    }
  ]
}